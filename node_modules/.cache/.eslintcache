[{"/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/index.js":"1","/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/App.js":"2","/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/body.js":"3","/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/head.js":"4","/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/date-fns.js":"5"},{"size":255,"mtime":1655109716044,"results":"6","hashOfConfig":"7"},{"size":252,"mtime":1655148555861,"results":"8","hashOfConfig":"7"},{"size":1005,"mtime":1655144875395,"results":"9","hashOfConfig":"7"},{"size":181,"mtime":1655148479966,"results":"10","hashOfConfig":"7"},{"size":196,"mtime":1655148579607,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"16ixc82",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"15"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/index.js",[],[],[],"/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/App.js",[],[],"/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/body.js",["29","30","31","32","33"],[],"import React from 'react'\n\nexport default function Body() {\n  return (\n    <div className='row'>\n      <div className='column'>\n        <img  src = \"https://source.unsplash.com/gYl-UtwNg_I/1500x1500\"/>\n        <p className='text'>hey</p>\n      </div>\n      <div className='column'>\n        <img src = \"https://source.unsplash.com/rFKUFzjPYiQ/1500x1500\"/>\n        <p className='text'>let's</p>\n      </div>\n      <div className='column'>\n        <img src = \"https://images.unsplash.com/photo-1465188162913-8fb5709d6d57?ixlib=rb-0.3.5&q=80&fm=jpg&crop=faces&cs=tinysrgb&w=1500&h=1500&fit=crop&s=967e8a713a4e395260793fc8c802901d\"/>\n        <p className='text'>give</p>\n      </div>\n      <div className='column'>\n        <img src = \"https://source.unsplash.com/ITjiVXcwVng/1500x1500\"/>\n        <p className='text'>all</p>\n      </div>\n      <div className='column'>\n        <img src = \"https://source.unsplash.com/3MNzGlQM7qs/1500x1500\"/>\n        <p className='text'>you can</p>\n      </div>\n    </div>\n  )\n}","/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/head.js",[],[],"/Users/aibat/Desktop/nFactorial/nfactorial-homework-1306-reactIntro/homework/src/date-fns.js",["34"],[],{"ruleId":"35","severity":1,"message":"36","line":7,"column":9,"nodeType":"37","endLine":7,"endColumn":74},{"ruleId":"35","severity":1,"message":"36","line":11,"column":9,"nodeType":"37","endLine":11,"endColumn":73},{"ruleId":"35","severity":1,"message":"36","line":15,"column":9,"nodeType":"37","endLine":15,"endColumn":192},{"ruleId":"35","severity":1,"message":"36","line":19,"column":9,"nodeType":"37","endLine":19,"endColumn":73},{"ruleId":"35","severity":1,"message":"36","line":23,"column":9,"nodeType":"37","endLine":23,"endColumn":73},{"ruleId":null,"fatal":true,"severity":2,"message":"38","line":6,"column":52},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Parsing error: The type cast expression is expected to be wrapped with parenthesis. (6:52)"]